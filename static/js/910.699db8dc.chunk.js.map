{"version":3,"file":"static/js/910.699db8dc.chunk.js","mappings":"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","sources":["components/Cast.js","components/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from './api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      const data = await getMovieCast(movieId);\n      setCast(data);\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map((actor) => (\n          <li key={actor.id}>\n            <img\n              src={actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : 'https://source.unsplash.com/random/200x300'}\n              alt={actor.name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","const apiKey = '39aef1fe202d396da43aaee435d1e2cc';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (query) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\n\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    return [];\n  }\n};\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieCast","sent","stop","apply","arguments","_jsxs","children","_jsx","map","actor","src","profile_path","concat","alt","name","character","id","apiKey","getTrendingMovies","response","fetch","json","abrupt","results","t0","console","error","getMovieDetails","_ref2","_callee2","_context2","_x","searchMovies","_ref3","_callee3","query","_context3","_x2","getMovieReviews","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}