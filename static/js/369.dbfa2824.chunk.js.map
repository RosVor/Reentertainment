{"version":3,"file":"static/js/369.dbfa2824.chunk.js","mappings":"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","sources":["components/MoviesList.js","components/api.js","components/SearchForm.js","pages/Movies.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport '../style/MoviesList.css';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"movies-list-container\">\n      <ul className=\"movies-list\">\n        {movies.map((movie) => (\n          <li key={movie.id} className=\"movie-item\">\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <div className=\"movie-card\">\n                <img\n                  src={movie.poster_path ? `https://image.tmdb.org/t/p/w200${movie.poster_path}` : 'https://source.unsplash.com/random/200x300'}\n                  alt={movie.title}\n                  className=\"movie-poster\"\n                />\n                <p className=\"movie-title\">{movie.title}</p>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n\n\n\n","const apiKey = '39aef1fe202d396da43aaee435d1e2cc';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (query) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\n\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    return [];\n  }\n};\n\n","import React, { useState } from 'react';\nimport '../style/SearchForm.css';\nconst SearchForm = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState(''); \n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n\n    if (onSearch) {\n      onSearch(searchQuery);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSearch} className=\"search-form\">\n      <input\n        type=\"text\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        className=\"search-input\"\n        placeholder=\"Search for movies...\"\n      />\n      <button type=\"submit\" className=\"search-button\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from 'react';\nimport { searchMovies } from '../components/api';\nimport SearchForm from '../components/SearchForm';\nimport MovieList from '../components/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      try {\n        const query = searchParams.get('query');\n        if (!query) return;\n        const results = await searchMovies(query);\n        setSearchResults(results);\n      } catch (error) {\n        console.error('Error fetching search results:', error);\n      }\n    };\n\n    fetchSearchResults();\n  }, [searchParams]);\n\n\n  const handleSearch = async (query) => {\n    setSearchParams({query});\n  };\n  \n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <SearchForm onSearch={handleSearch} />\n      <MovieList movies={searchResults} />\n    </div>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_ref","movies","location","useLocation","_jsx","className","children","map","movie","Link","to","concat","id","state","from","_jsxs","src","poster_path","alt","title","apiKey","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","sent","json","abrupt","results","t0","console","error","stop","apply","arguments","getMovieDetails","_ref2","_callee2","movieId","_context2","_x","searchMovies","_ref3","_callee3","query","_context3","_x2","getMovieReviews","_ref4","_callee4","_context4","_x3","getMovieCast","_ref5","_callee5","_context5","cast","_x4","onSearch","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","handleSearch","e","preventDefault","onSubmit","type","value","onChange","target","placeholder","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","fetchSearchResults","get","SearchForm","MovieList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}